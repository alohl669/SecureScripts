.\" Automatically generated by Pandoc 2.5
.\"
.TH "" "" "" "" ""
.hy
.SH secureScripts
.PP
secureScripts is a small set of tools for linux, designed to monitor
some basic system functions and locate possible vulnerabilities.
This set of tools is based on pentesting techniques for learning reasons
.SS Requirements
.IP \[bu] 2
nmap
.IP \[bu] 2
openSSL
.SS Install
.IP
.nf
\f[C]
git clone https://github.com/alohl669/secureScripts.git
\&. secureScripts/secureScripts.sh
\f[R]
.fi
.PP
secureScripts is intended to act as a support, it is just a set of
aliases and functions that you can install in your .bashrc(you will be
asked every time you run secureScripts.sh).
Once installed on your .bashrc you will only have to type
\[lq]secureScripts\[rq] to load it in its entirety.
We don\[cq]t want it to load every session, just when you need it, so
you will have to use the initial alias.
.IP
.nf
\f[C]
secureScripts
\f[R]
.fi
.SS man Page
.IP
.nf
\f[C]
man ./secureScripts.1
\f[R]
.fi
.PP
Only in secureScripts\[cq]s directory, would require sudo and \[lq]we
are not yet\[rq]
.SS lssuid
.PP
List of files with SUID bit and GTFOBINS references
.IP
.nf
\f[C]
lssuid
\f[R]
.fi
.SS lssh
.PP
List \f[I]sh\f[R] scripts
.IP
.nf
\f[C]
lssh
\f[R]
.fi
.SS lscap
.PP
Capabilities search engine
.IP
.nf
\f[C]
lscap
\f[R]
.fi
.SS showCommands
.PP
showCommands is a tool to discover the processes that go in and out of
execution.
This is useful for identifying vulnerabilities and/or malicious
applications.
One of its most useful examples is for discovering CRON processes.
The tool has the ability to use exclusion and inclusion filters and the
ability to add and remove them easily.
If a more detailed edition is desired, the txt files that are created
can be modified.
.IP
.nf
\f[C]
cd secureScripts/scripts/showCommands
\f[R]
.fi
.PP
\f[B]Usage:\f[R]
.IP
.nf
\f[C]
        ./showCommands.sh [[\-h] | [\-b] | [\-w] | [\-a] | [\-e] | [\-r] | [\-d]]
        ./showCommands.sh [\-h]

        \-b      See excluded filters 
        \-w      See filters included 
        \-a      Adds a filter to inclusion list. [showCommands.sh \-a <filter>]
        \-e      Adds a filter to exclusion list. [showCommands.sh \-e <filter>]
        \-r      Remove all filters
        \-d      Document the output in a \[dq]report.txt\[dq] file
        \-h      help  
\f[R]
.fi
.PP
\f[B]Examples:\f[R] if we wanted to simply look for only those processes
executed by CRON, we would simply need
.IP
.nf
\f[C]
\&./showCommands.sh \-a CRON
\&./showCommands.sh
\f[R]
.fi
.RS
.PP
The application is based on an infinite loop and as a consequence brings
with it an excessive consumption of CPU, we will have to look for
alternatives
.RE
.SS netAliases
.PP
Target recognition tools
.IP
.nf
\f[C]
cd secureScripts/scripts/netAliases && \[rs]
\&./netAliases.sh
\f[R]
.fi
